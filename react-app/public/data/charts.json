[
  {
    "name": "fluentd",
    "repo": "fluent",
    "description": "Fluentd is an open source data collector for unified logging layer, designed to efficiently collect, filter, and forward log data from various sources.",
    "version": "0.4.6",
    "appVersion": "1.16.3",
    "values": "# Default values for fluentd\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\n# Override the name of the chart\nnameOverride: \"\"\n# Override the full name of the chart\nfullnameOverride: \"\"\n\n# Deployment type: DaemonSet, Deployment or StatefulSet\nkind: \"DaemonSet\"\n# Output variant: azureblob, cloudwatch, elasticsearch7, elasticsearch8, gcs, graylog, kafka, kafka2, kinesis, opensearch\nvariant: elasticsearch7\n# # Only applicable for Deployment or StatefulSet\n# replicaCount: 1\n\n# Container image configuration\nimage:\n  # Repository for the fluentd image\n  repository: \"fluent/fluentd-kubernetes-daemonset\"\n  # Image pull policy\n  pullPolicy: \"IfNotPresent\"\n  # Image tag (defaults to appVersion if empty)\n  tag: \"\"\n\n## Optional array of imagePullSecrets containing private registry credentials\n## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\nimagePullSecrets: []\n\n# Service account configuration\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: null\n\n# RBAC configuration\nrbac:\n  # Specifies whether RBAC resources should be created\n  create: true\n\n# from Kubernetes 1.25, PSP is deprecated\n# See: https://kubernetes.io/blog/2022/08/23/kubernetes-v1-25-release/#pod-security-changes\n# We automatically disable PSP if Kubernetes version is 1.25 or higher\npodSecurityPolicy:\n  # Enable PodSecurityPolicy\n  enabled: true\n  # Annotations to add to the PSP\n  annotations: {}\n\n## Security Context policies for controller pods\n## See https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ for\n## notes on enabling and using sysctls\n##\npodSecurityContext: {}\n  # seLinuxOptions:\n  #   type: \"spc_t\"\n\nsecurityContext: {}\n  # capabilities:\n  #   drop:\n  #   - ALL\n  # readOnlyRootFilesystem: true\n  # runAsNonRoot: true\n  # runAsUser: 1000\n\n# Configure the livecycle\n# Ref: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/\nlifecycle: {}\n  # preStop:\n  #   exec:\n  #     command: [\"/bin/sh\", \"-c\", \"sleep 20\"]\n\n# Configure the livenessProbe\n# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\nlivenessProbe:\n  httpGet:\n    path: /metrics\n    port: metrics\n  # initialDelaySeconds: 0\n  # periodSeconds: 10\n  # timeoutSeconds: 1\n  # successThreshold: 1\n  # failureThreshold: 3\n\n# Configure the readinessProbe\n# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\nreadinessProbe:\n  httpGet:\n    path: /metrics\n    port: metrics\n  # initialDelaySeconds: 0\n  # periodSeconds: 10\n  # timeoutSeconds: 1\n  # successThreshold: 1\n  # failureThreshold: 3\n\n# Container resource requests and limits\nresources: {}\n  # requests:\n  #   cpu: 10m\n  #   memory: 128Mi\n  # limits:\n  #   memory: 128Mi\n\n## only available if kind is Deployment\nautoscaling:\n  # Enable autoscaling\n  enabled: false\n  # Minimum number of replicas\n  minReplicas: 1\n  # Maximum number of replicas\n  maxReplicas: 100\n  # Target CPU utilization percentage\n  targetCPUUtilizationPercentage: 80\n  # targetMemoryUtilizationPercentage: 80\n  ## see https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale-walkthrough/#autoscaling-on-multiple-metrics-and-custom-metrics\n  customRules: []\n    # - type: Pods\n    #   pods:\n    #     metric:\n    #       name: packets-per-second\n    #     target:\n    #       type: AverageValue\n    #       averageValue: 1k\n  ## see https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/#support-for-configurable-scaling-behavior\n  # behavior:\n  #   scaleDown:\n  #     policies:\n  #       - type: Pods\n  #         value: 4\n  #         periodSeconds: 60\n  #       - type: Percent\n  #         value: 10\n  #         periodSeconds: 60\n\n# priorityClassName: \"system-node-critical\"\n\n# Node selector for pod assignment\nnodeSelector: {}\n\n## Node tolerations for server scheduling to nodes with taints\n## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n##\ntolerations: []\n# - key: null\n#   operator: Exists\n#   effect: \"NoSchedule\"\n\n## Affinity and anti-affinity\n## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity\n##\naffinity: {}\n\n## Annotations to be added to fluentd DaemonSet/Deployment\n##\nannotations: {}\n\n## Labels to be added to fluentd DaemonSet/Deployment\n##\nlabels: {}\n\n## Annotations to be added to fluentd pods\n##\npodAnnotations: {}\n\n## Labels to be added to fluentd pods\n##\npodLabels: {}\n\n## How long (in seconds) a pods needs to be stable before progressing the deployment\n##\nminReadySeconds:\n\n## How long (in seconds) a pod may take to exit (useful with lifecycle hooks to ensure lb deregistration is done)\n##\nterminationGracePeriodSeconds:\n\n## Deployment strategy / DaemonSet updateStrategy\n##\nupdateStrategy: {}\n#   type: RollingUpdate\n#   rollingUpdate:\n#     maxUnavailable: 1\n\n## Additional environment variables to set for fluentd pods\nenv: []\n  # - name: \"FLUENTD_CONF\"\n  #   value: \"../../../etc/fluent/fluent.conf\"\n  # - name: FLUENT_ELASTICSEARCH_HOST\n  #   value: \"elasticsearch-master\"\n  # - name: FLUENT_ELASTICSEARCH_PORT\n  #   value: \"9200\"\n\nenvFrom: []\n\ninitContainers: []\n\n## Name of the configMap containing a custom fluentd.conf configuration file to use instead of the default.\n# mainConfigMapNameOverride: \"\"\n\n## Name of the configMap containing files to be placed under /etc/fluent/config.d/\n## NOTE: This will replace ALL default files in the aforementioned path!\n# extraFilesConfigMapNameOverride: \"\"\n\n# Mount /var/log directory\nmountVarLogDirectory: true\n# Mount Docker containers directory\nmountDockerContainersDirectory: true\n\nvolumes: []\n\nvolumeMounts: []\n\n## Only available if kind is StatefulSet\n## Fluentd persistence\n##\npersistence:\n  # Enable persistence\n  enabled: false\n  # Storage class to use\n  storageClass: \"\"\n  # Access mode for the persistent volume\n  accessMode: ReadWriteOnce\n  # Size of the persistent volume\n  size: 10Gi\n\n## Fluentd service\n##\nservice:\n  # Enable service creation\n  enabled: true\n  # Service type\n  type: \"ClusterIP\"\n  # Service annotations\n  annotations: {}\n  # loadBalancerIP:\n  # externalTrafficPolicy: Local\n  # Service ports\n  ports: []\n  # - name: \"forwarder\"\n  #   protocol: TCP\n  #   containerPort: 24224\n\n## Prometheus Monitoring\n##\nmetrics:\n  serviceMonitor:\n    # Enable service monitor for Prometheus\n    enabled: false\n    # Additional labels for the service monitor\n    additionalLabels:\n      release: prometheus-operator\n    # Namespace for the service monitor\n    namespace: \"\"\n    # Namespace selector for the service monitor\n    namespaceSelector: {}\n    ## metric relabel configs to apply to samples before ingestion.\n    ##\n    metricRelabelings: []\n    # - sourceLabels: [__name__]\n    #   separator: ;\n    #   regex: ^fluentd_output_status_buffer_(oldest|newest)_.+\n    #   replacement: $1\n    #   action: drop\n    ## relabel configs to apply to samples after ingestion.\n    ##\n    relabelings: []\n    # - sourceLabels: [__meta_kubernetes_pod_node_name]\n    #   separator: ;\n    #   regex: ^(.*)$\n    #   targetLabel: nodename\n    #   replacement: $1\n    #   action: replace\n    ## Additional serviceMonitor config\n    ##\n    # jobLabel: fluentd\n    # scrapeInterval: 30s\n    # scrapeTimeout: 5s\n    # honorLabels: true\n\n  prometheusRule:\n    # Enable PrometheusRule for alerting\n    enabled: false\n    # Additional labels for the PrometheusRule\n    additionalLabels: {}\n    # Namespace for the PrometheusRule\n    namespace: \"\"\n    # Alerting rules\n    rules: []\n    # - alert: FluentdDown\n    #   expr: up{job=\"fluentd\"} == 0\n    #   for: 5m\n    #   labels:\n    #     context: fluentd\n    #     severity: warning\n    #   annotations:\n    #     summary: \"Fluentd Down\"\n    #     description: \"{{ $labels.pod }} on {{ $labels.nodename }} is down\"\n    # - alert: FluentdScrapeMissing\n    #   expr: absent(up{job=\"fluentd\"} == 1)\n    #   for: 15m\n    #   labels:\n    #     context: fluentd\n    #     severity: warning\n    #   annotations:\n    #     summary: \"Fluentd Scrape Missing\"\n    #     description: \"Fluentd instance has disappeared from Prometheus target discovery\"\n\n## Grafana Monitoring Dashboard\n##\ndashboards:\n  # Enable Grafana dashboards\n  enabled: \"true\"\n  # Namespace for the dashboards\n  namespace: \"\"\n  # Labels for dashboard discovery\n  labels:\n    grafana_dashboard: '\"1\"'\n\n## Fluentd list of plugins to install\n##\nplugins: []\n# - fluent-plugin-out-http\n\n## Add fluentd config files from K8s configMaps\n##\nconfigMapConfigs: []\n#  - fluentd-prometheus-conf\n#  - fluentd-systemd-conf\n\n## Fluentd configurations:\n##\nfileConfigs:\n  01_sources.conf: |-2\n    ## logs from podman\n    <source>\n      @type tail\n      @id in_tail_container_logs\n      @label @KUBERNETES\n      path /var/log/containers/*.log\n      pos_file /var/log/fluentd-containers.log.pos\n      tag kubernetes.*\n      read_from_head true\n      <parse>\n        @type multi_format\n        <pattern>\n          format json\n          time_key time\n          time_type string\n          time_format \"%Y-%m-%dT%H:%M:%S.%NZ\"\n          keep_time_key false\n        </pattern>\n        <pattern>\n          format regexp\n          expression /^(?<time>.+) (?<stream>stdout|stderr)( (.))? (?<log>.*)$/\n          time_format '%Y-%m-%dT%H:%M:%S.%NZ'\n          keep_time_key false\n        </pattern>\n      </parse>\n      emit_unmatched_lines true\n    </source>\n\n    # expose metrics in prometheus format\n    <source>\n      @type prometheus\n      bind 0.0.0.0\n      port 24231\n      metrics_path /metrics\n    </source>\n\n  02_filters.conf: |-2\n    <label @KUBERNETES>\n      <match kubernetes.var.log.containers.fluentd**>\n        @type relabel\n        @label @FLUENT_LOG\n      </match>\n\n      # <match kubernetes.var.log.containers.**_kube-system_**>\n      #   @type null\n      #   @id ignore_kube_system_logs\n      # </match>\n\n      <filter kubernetes.**>\n        @type kubernetes_metadata\n        @id filter_kube_metadata\n        skip_labels false\n        skip_container_metadata false\n        skip_namespace_metadata true\n        skip_master_url true\n      </filter>\n\n      <match **>\n        @type relabel\n        @label @DISPATCH\n      </match>\n    </label>\n\n  03_dispatch.conf: |-2\n    <label @DISPATCH>\n      <filter **>\n        @type prometheus\n        <metric>\n          name fluentd_input_status_num_records_total\n          type counter\n          desc The total number of incoming records\n          <labels>\n            tag ${tag}\n            hostname ${hostname}\n          </labels>\n        </metric>\n      </filter>\n\n      <match **>\n        @type relabel\n        @label @OUTPUT\n      </match>\n    </label>\n\n  04_outputs.conf: |-2\n    <label @OUTPUT>\n      <match **>\n        @type elasticsearch\n        host \"elasticsearch-master\"\n        port 9200\n        path \"\"\n        user elastic\n        password changeme\n        # Don't wait for elastic to start up.\n        verify_es_version_at_startup false\n      </match>\n    </label>\n\ningress:\n  # Enable ingress\n  enabled: false\n  # Ingress annotations\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  # Ingress hosts\n  hosts:\n    # - host: fluentd.example.tld\n    - port: 9880\n\n  # TLS configuration\n  tls: []\n  # - secretName: fluentd-tls\n  #   hosts:\n  #     - fluentd.example.tld",
    "url": "https://github.com/fluent/helm-charts/tree/main/charts/fluentd",
    "createdAt": "2025-10-03"
  },
  {
    "name": "opensearch",
    "repo": "opensearch",
    "description": "OpenSearch is a distributed search and analytics engine based on Apache Lucene. It provides a RESTful multi-tenant database with a HTTP web interface and schema-free JSON documents.",
    "version": "2.23.1",
    "appVersion": "2.16.0",
    "values": "# OpenSearch configuration\n# Ref: https://github.com/opensearch-project/helm-charts/blob/main/charts/opensearch/values.yaml\n\n## Global settings\nglobal:\n  imageRegistry: \"\"\n  imagePullSecrets: []\n  storageClass: \"\"\n\n## OpenSearch settings\nopensearch:\n  ## OpenSearch image settings\n  image:\n    repository: opensearchproject/opensearch\n    tag: \"2.16.0\"\n    pullPolicy: IfNotPresent\n  \n  ## Number of OpenSearch nodes\n  replicas: 2\n  \n  ## JVM settings\n  jvmOptions: \"-Xmx512m -Xms512m\"\n  \n  ## Resources settings\n  resources:\n    limits:\n      cpu: 1000m\n      memory: 1Gi\n    requests:\n      cpu: 500m\n      memory: 512Mi\n  \n  ## Persistence settings\n  persistence:\n    enabled: true\n    size: 30Gi\n    storageClass: \"\"\n  \n  ## OpenSearch cluster settings\n  cluster:\n    name: opensearch-cluster\n    masterNodes: 2\n    ingestNodes: 2\n    dataNodes: 2\n\n## OpenSearch Dashboards settings\ndashboards:\n  enabled: true\n  \n  image:\n    repository: opensearchproject/opensearch-dashboards\n    tag: \"2.16.0\"\n    pullPolicy: IfNotPresent\n  \n  replicas: 1\n  \n  resources:\n    limits:\n      cpu: 500m\n      memory: 512Mi\n    requests:\n      cpu: 250m\n      memory: 256Mi\n  \n  service:\n    type: ClusterIP\n    port: 5601\n\n## Security settings\nsecurity:\n  enabled: false\n  \n  # Admin password secret (if security is enabled)\n  adminSecret: \"\"\n\n## Networking settings\nnetworking:\n  httpPort: 9200\n  transportPort: 9300\n\n## Metrics and monitoring\nmetrics:\n  enabled: false\n  prometheus:\n    serviceMonitor:\n      enabled: false\n",
    "url": "https://github.com/opensearch-project/helm-charts/tree/main/charts/opensearch",
    "createdAt": "2025-10-03"
  },
  {
    "name": "pinot",
    "repo": "apache",
    "description": "Apache Pinot is a real-time distributed OLAP datastore designed to answer OLAP queries with low latency.",
    "version": "0.3.4",
    "appVersion": "1.5.0",
    "values": "# Pinot configuration\n# Ref: https://github.com/apache/pinot/blob/master/helm/pinot/values.yaml\n\n## Global settings\nglobal:\n  imageRegistry: \"\"\n  imagePullSecrets: []\n  storageClass: \"\"\n\n## Controller settings\ncontroller:\n  replicaCount: 1\n  image:\n    repository: apachepinot/pinot\n    tag: \"1.5.0\"\n    pullPolicy: IfNotPresent\n  \n  resources:\n    limits:\n      cpu: 500m\n      memory: 1Gi\n    requests:\n      cpu: 250m\n      memory: 512Mi\n  \n  ## Persistence settings for controller\n  persistence:\n    enabled: true\n    size: 10Gi\n    storageClass: \"\"\n\n## Broker settings\nbroker:\n  replicaCount: 2\n  image:\n    repository: apachepinot/pinot\n    tag: \"1.5.0\"\n    pullPolicy: IfNotPresent\n  \n  resources:\n    limits:\n      cpu: 500m\n      memory: 1Gi\n    requests:\n      cpu: 250m\n      memory: 512Mi\n\n## Server settings\nserver:\n  replicaCount: 2\n  image:\n    repository: apachepinot/pinot\n    tag: \"1.5.0\"\n    pullPolicy: IfNotPresent\n  \n  resources:\n    limits:\n      cpu: 1000m\n      memory: 2Gi\n    requests:\n      cpu: 500m\n      memory: 1Gi\n  \n  ## Persistence settings for server\n  persistence:\n    enabled: true\n    size: 20Gi\n    storageClass: \"\"\n\n## Zookeeper settings (for Pinot metadata)\nzookeeper:\n  enabled: true\n  replicaCount: 3\n  \n  persistence:\n    enabled: true\n    size: 8Gi\n    storageClass: \"\"\n  \n  resources:\n    limits:\n      cpu: 500m\n      memory: 512Mi\n    requests:\n      cpu: 250m\n      memory: 256Mi\n  \n  heapSize: 256\n\n## Metrics configuration\nmetrics:\n  enabled: false\n  prometheus:\n    serviceMonitor:\n      enabled: false\n",
    "url": "https://github.com/apache/pinot/tree/master/helm/pinot",
    "createdAt": "2025-10-03"
  },
  {
    "name": "kafka",
    "repo": "bitnami",
    "description": "Apache Kafka is a distributed streaming platform designed to build real-time pipelines and can be used as a message broker or as a replacement for a shared database.",
    "version": "32.4.3",
    "appVersion": "4.1.0",
    "values": "# Kafka configuration\n# Ref: https://github.com/bitnami/charts/blob/main/bitnami/kafka/values.yaml\n\n## Global settings\nglobal:\n  imageRegistry: \"\"\n  imagePullSecrets: []\n  storageClass: \"\"\n\n## Kafka configuration\nkafka:\n  ## Authentication in Kafka\n  auth:\n    clientProtocol: plain  # Possible values: plain, tls, mtls, sasl, oauthbearer\n    interBrokerProtocol: plain\n    \n  ## Authorization in Kafka\n  authorization:\n    type: none  # Possible values: none, simple\n    \n  ## Kafka deployment configuration\n  replicaCount: 3\n  \n  ## Kafka listeners configuration\n  listeners:\n    client:\n      name: CLIENT\n      port: 9092\n      protocol: PLAINTEXT\n    external:\n      name: EXTERNAL\n      port: 9094\n      protocol: PLAINTEXT\n      type: loadBalancer\n  \n  ## Persistence configuration\n  persistence:\n    enabled: true\n    size: 8Gi\n    storageClass: \"\"\n  \n  ## Resources configuration\n  resources:\n    limits:\n      cpu: 1000m\n      memory: 2Gi\n    requests:\n      cpu: 500m\n      memory: 1Gi\n  \n  ## JVM configuration\n  heapOpts: \"-Xmx1024m -Xms1024m\"\n\n## Zookeeper settings\nzookeeper:\n  enabled: true\n  replicaCount: 3\n  \n  persistence:\n    enabled: true\n    size: 8Gi\n    storageClass: \"\"\n  \n  resources:\n    limits:\n      cpu: 500m\n      memory: 512Mi\n    requests:\n      cpu: 250m\n      memory: 256Mi\n  \n  heapSize: 256\n\n## Metrics configuration\nmetrics:\n  kafka:\n    enabled: false\n    \n  zookeeper:\n    enabled: false\n    \n  jmx:\n    enabled: false\n  \n## Network Policy configuration\nnetworkPolicy:\n  enabled: false",
    "url": "https://github.com/bitnami/charts/tree/main/bitnami/kafka",
    "createdAt": "2025-10-03"
  },
  {
    "name": "argo-cd",
    "repo": "argo",
    "description": "Declarative, GitOps continuous delivery tool for Kubernetes",
    "version": "8.0.2",
    "appVersion": "v3.1.8",
    "values": "# ArgoCD configuration\n# Ref: https://github.com/argoproj/argo-helm/blob/main/charts/argo-cd/values.yaml\n\n## ArgoCD configuration\n## Global settings\nglobal:\n  image:\n    registry: quay.io\n    repository: argoproj/argocd\n    tag: \"v3.1.8\"\n\n## Server configuration\nserver:\n  name: server\n  image: {}\n  replicas: 1\n  service:\n    type: ClusterIP\n    port: 8080\n    targetPort: 8080\n  ingress:\n    enabled: false\n\n## Redis configuration\nredis:\n  enabled: true\n  name: redis\n  image:\n    registry: public.ecr.aws\n    repository: docker/library/redis\n    tag: 7.2-alpine\n\n## Application controller configuration\napplicationSet:\n  enabled: true\n  image:\n    registry: quay.io\n    repository: argoproj/applicationset\n    tag: \"v1.13.0\"\n\ndex:\n  enabled: true\n  name: dex-server\n  image:\n    registry: ghcr.io\n    repository: dexidp/dex\n    tag: \"v2.40.0\"\n\nconfigs:\n  # Admin user initial password\n  secret:\n    createSecret: true\n    # argocdServerAdminPassword: \"\"\n    # argocdServerAdminPasswordMtime: \"\"\n",
    "url": "https://github.com/argoproj/argo-helm/tree/main/charts/argo-cd",
    "createdAt": "2025-10-03"
  },
  {
    "name": "nginx-ingress",
    "repo": "ingress-nginx",
    "description": "Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer",
    "version": "4.10.1",
    "appVersion": "1.10.1",
    "values": "## nginx configuration\n## Ref: https://github.com/kubernetes/ingress-nginx/blob/main/charts/ingress-nginx/values.yaml\ncontroller:\n  image:\n    registry: k8s.gcr.io\n    image: ingress-nginx/controller\n    tag: \"v1.10.1\"\n  replicaCount: 1\n  service:\n    type: LoadBalancer\n    port: 80\n    targetPorts:\n      http: 80\n      https: 443\n  resources:\n    limits:\n      cpu: 100m\n      memory: 90Mi\n    requests:\n      cpu: 100m\n      memory: 90Mi\n\ndefaultBackend:\n  enabled: false\n\nprometheus:\n  enabled: false",
    "url": "https://github.com/kubernetes/ingress-nginx",
    "createdAt": "2025-10-03"
  },
  {
    "name": "redis",
    "repo": "bitnami",
    "description": "Open source, advanced key-value store. It is often referred to as a data structure server since keys can contain strings, hashes, lists, sets and sorted sets.",
    "version": "19.6.1",
    "appVersion": "7.2.5",
    "values": "## @section Global parameters\n## Global Docker image parameters\n## Please, note that this will override the image parameters, including dependencies, configured to use the global value\n## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass\n##\nglobal:\n  imageRegistry: \"\"\n  imagePullSecrets: []\n  storageClass: \"\"\n\n## @section Common parameters\n##\n## @param nameOverride String to partially override common.names.fullname\nnameOverride: \"\"\n## @param fullnameOverride String to fully override common.names.fullname\nfullnameOverride: \"\"\n## @param clusterDomain Default Kubernetes cluster domain\nclusterDomain: cluster.local\n## @param extraDeploy Array of extra objects to deploy with the release\nextraDeploy: []\n\n## Enable diagnostic mode in the deployment\ndiagnosticMode:\n  enabled: false\n  command:\n    - sleep\n  args:\n    - infinity\n\n## Bitnami Redis image version\n## ref: https://hub.docker.com/r/bitnami/redis/tags/\n## @param image.registry Redis image registry\n## @param image.repository Redis image repository\n## @param image.tag Redis image tag (immutable tags are recommended)\n## @param image.digest Redis image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag\n## @param image.pullPolicy Redis image pull policy\n## @param image.pullSecrets Redis image pull secrets\nimage:\n  registry: docker.io\n  repository: bitnami/redis\n  tag: 7.2.5-debian-12-r0\n  digest: \"\"\n  pullPolicy: IfNotPresent\n  pullSecrets: []",
    "url": "https://github.com/bitnami/charts/tree/main/bitnami/redis",
    "createdAt": "2025-10-03"
  },
  {
    "name": "mongodb",
    "repo": "bitnami",
    "description": "NoSQL document-oriented database that stores JSON-like documents with dynamic schemas, simplifying the integration of data in content-driven applications.",
    "version": "15.1.5",
    "appVersion": "7.0.12",
    "values": "## @section Global parameters\n## Global Docker image parameters\n## Please, note that this will override the image parameters, including dependencies, configured to use the global value\n## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass\n##\nglobal:\n  imageRegistry: \"\"\n  imagePullSecrets: []\n  storageClass: \"\"\n  mongodb:\n    auth:\n      rootPassword: \"\"\n      passwords: []\n      usernames: []\n      database: \"\"\n      replicaSetKey: \"\"\n    service:\n      ports:\n        mongodb: 27017\n      nodePorts:\n        mongodb: \"\"\n    architecture: standalone\n\n## @section Common parameters\n##\n## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)\nnameOverride: \"\"\n\n## @param fullnameOverride String to fully override common.names.fullname template\nfullnameOverride: \"\"\n\n## @param clusterDomain Default Kubernetes cluster domain\nclusterDomain: cluster.local\n\n## @param extraDeploy Array of extra objects to deploy with the release\nextraDeploy: []\n\n## @param commonLabels Labels to add to all deployed objects\ncommonLabels: {}\n\n## @param commonAnnotations Annotations to add to all deployed objects\ncommonAnnotations: {}\n\n## Enable diagnostic mode in the deployment\ndiagnosticMode:\n  enabled: false\n  command:\n    - sleep\n  args:\n    - infinity",
    "url": "https://github.com/bitnami/charts/tree/main/bitnami/mongodb",
    "createdAt": "2025-10-03"
  },
  {
    "name": "postgresql",
    "repo": "bitnami",
    "description": "Highly available PostgreSQL cluster. Supports both standalone and replicated deployments.",
    "version": "15.5.12",
    "appVersion": "16.3.0",
    "values": "## @section Global parameters\n## Global Docker image parameters\n## Please, note that this will override the image parameters, including dependencies, configured to use the global value\n## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass\n##\nglobal:\n  postgresql:\n    auth:\n      postgresPassword: \"\"\n      database: \"\"\n    service:\n      ports:\n        postgresql: 5432\n  imageRegistry: \"\"\n  imagePullSecrets: []\n  storageClass: \"\"\n\n## @section Common parameters\n##\n## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)\nnameOverride: \"\"\n\n## @param fullnameOverride String to fully override common.names.fullname template\nfullnameOverride: \"\"\n\n## @param clusterDomain Kubernetes cluster domain name\nclusterDomain: cluster.local\n\n## @param extraDeploy Array of extra objects to deploy with the release\nextraDeploy: []\n\n## Enable diagnostic mode in the deployment\ndiagnosticMode:\n  enabled: false\n  command:\n    - sleep\n  args:\n    - infinity",
    "url": "https://github.com/bitnami/charts/tree/main/bitnami/postgresql",
    "createdAt": "2025-10-03"
  },
  {
    "name": "prometheus",
    "repo": "prometheus-community",
    "description": "Prometheus is a monitoring system and time series database.",
    "version": "25.31.0",
    "appVersion": "2.53.0",
    "values": "## Configuration for the main Prometheus server\n##\nserver:\n  enabled: true\n  name: server\n  image:\n    registry: quay.io\n    repository: prometheus/prometheus\n    tag: \"v2.53.0\"\n    pullPolicy: IfNotPresent\n\n  ## Prometheus server ConfigMap entries\n  ##\n  configMap:\n    enabled: true\n\n  ## Configuration for the server's persistent volume\n  ##\n  persistentVolume:\n    enabled: true\n    size: 8Gi\n    storageClass: \"\"\n    accessModes:\n      - ReadWriteOnce\n\n  ## Resources for the Prometheus server\n  ##\n  resources:\n    limits:\n      cpu: 500m\n      memory: 512Mi\n    requests:\n      cpu: 500m\n      memory: 512Mi",
    "url": "https://github.com/prometheus-community/helm-charts/tree/main/charts/prometheus",
    "createdAt": "2025-10-03"
  }
]