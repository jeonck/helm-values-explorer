{
  "name": "superset",
  "repo": "apache",
  "description": "Apache Superset is a modern data exploration and visualization platform. It offers a rich set of data visualizations, an easy-to-use interface for exploring and visualizing data, and an extensible architecture for customizing and extending functionality.",
  "version": "1.2.2",
  "appVersion": "4.1.1",
  "values": "# Superset configuration\n# Ref: https://github.com/apache/superset/blob/master/helm/superset/values.yaml\n\n## Global settings\nglobal:\n  imageRegistry: \"\"\n  imagePullSecrets: []\n  storageClass: \"\"\n\n## Superset configuration\nsuperset:\n  ## Superset image settings\n  image:\n    repository: apachessuperset/superset\n    tag: \"4.1.1\"\n    pullPolicy: IfNotPresent\n  \n  ## Superset configuration\n  config:\n    ## Superset secret key\n    secretKey: \"CHANGE_ME_TO_A_COMPLEX_RANDOM_SECRET\"\n    \n    ## Superset configuration options\n    config:\n      # Row limit for SQL Lab queries\n      rowLimit: 10000\n      \n      # Maximum number of rows that can be downloaded in a single CSV file\n      csvMaxRows: 100000\n      \n      # Timezone for the Superset application\n      timezone: \"UTC\"\n      \n      # Feature flags to enable/disable specific features\n      featureFlags: {}\n      \n      # Database connection strings\n      sqlalchemyDatabaseUri: \"postgresql://superset:superset@superset-postgresql:5432/superset\"\n  \n  ## Resources settings\n  resources:\n    limits:\n      cpu: 1000m\n      memory: 1Gi\n    requests:\n      cpu: 500m\n      memory: 512Mi\n  \n  ## Service settings\n  service:\n    type: ClusterIP\n    port: 8088\n    annotations: {}\n  \n  ## Ingress settings\ningress:\n    enabled: false\n    annotations: {}\n      # kubernetes.io/ingress.class: nginx\n      # kubernetes.io/tls-acres: \"true\"\n    hosts:\n      - host: superset.example.local\n        paths:\n          - path: /\n            pathType: Prefix\n    tls: []\n  \n  ## Environment variables\n  environment: {}\n  \n  ## Liveness probe settings\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 30\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 3\n    successThreshold: 1\n  \n  ## Readiness probe settings\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 3\n    successThreshold: 1\n\n## Superset database settings (PostgreSQL)\ndatabase:\n  enabled: true\n  \n  image:\n    repository: postgres\n    tag: \"15\"\n    pullPolicy: IfNotPresent\n  \n  auth:\n    postgresPassword: \"superset\"\n    database: \"superset\"\n  \n  primary:\n    resources:\n      limits:\n        cpu: 500m\n        memory: 512Mi\n      requests:\n        cpu: 250m\n        memory: 256Mi\n    persistence:\n      enabled: true\n      size: 8Gi\n      storageClass: \"\"\n\n## Superset Redis settings\nredis:\n  enabled: true\n  \n  image:\n    repository: redis\n    tag: \"7.2-alpine\"\n    pullPolicy: IfNotPresent\n  \n  auth:\n    enabled: false\n    \n  master:\n    resources:\n      limits:\n        cpu: 200m\n        memory: 256Mi\n      requests:\n        cpu: 100m\n        memory: 128Mi\n    persistence:\n      enabled: false\n      size: 8Gi\n      storageClass: \"\"\n\n## Superset worker settings\nworker:\n  enabled: true\n  replicas: 1\n  \n  resources:\n    limits:\n      cpu: 500m\n      memory: 512Mi\n    requests:\n      cpu: 250m\n      memory: 256Mi\n  \n  ## Worker liveness probe settings\n  livenessProbe:\n    enabled: true\n    initialDelaySeconds: 30\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 3\n    successThreshold: 1\n  \n  ## Worker readiness probe settings\n  readinessProbe:\n    enabled: true\n    initialDelaySeconds: 5\n    periodSeconds: 10\n    timeoutSeconds: 5\n    failureThreshold: 3\n    successThreshold: 1\n\n## Superset beat settings (Celery beat scheduler)\nbeat:\n  enabled: true\n  \n  resources:\n    limits:\n      cpu: 200m\n      memory: 256Mi\n    requests:\n      cpu: 100m\n      memory: 128Mi\n\n## Init job settings (database initialization)\ninit:\n  enabled: true\n  \n  resources:\n    limits:\n      cpu: 200m\n      memory: 256Mi\n    requests:\n      cpu: 100m\n      memory: 128Mi\n\n## Metrics settings\nmetrics:\n  enabled: false\n  serviceMonitor:\n    enabled: false\n\n## Security context\nsecurityContext: {}\n  # runAsUser: 1000\n  # runAsGroup: 1000\n  # fsGroup: 1000\n\n## Service account\nserviceAccount:\n  create: true\n  name: \"\"\n\n## Pod security context\npodSecurityContext: {}\n  # fsGroup: 1000\n\n## Node selector\nnodeSelector: {}\n\n## Tolerations\ntolerations: []\n\n## Affinity\naffinity: {}\n\n## Priority class\npriorityClassName: \"\"\n\n## Topology spread constraints\ntopologySpreadConstraints: []\n\n## Extra volumes\nextraVolumes: []\n\n## Extra volume mounts\nextraVolumeMounts: []",
  "url": "https://github.com/apache/superset/tree/master/helm/superset",
  "createdAt": "2025-10-03"
}