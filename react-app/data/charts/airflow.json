{
  "name": "airflow",
  "repo": "apache",
  "description": "Apache Airflow is a platform to programmatically author, schedule, and monitor workflows. It allows you to define workflows as code using Python.",
  "version": "1.15.0",
  "appVersion": "2.10.0",
  "values": "# Airflow configuration\n# Ref: https://github.com/apache/airflow/blob/main/chart/values.yaml\n\n## Global settings\nglobal:\n  imageRegistry: \"\"\n  imagePullSecrets: []\n  storageClass: \"\"\n\n## Airflow configuration\nairflow:\n  ## Airflow image settings\n  image:\n    repository: apache/airflow\n    tag: \"2.10.0-python3.9\"\n    pullPolicy: IfNotPresent\n  \n  ## Airflow executor\n  ## Options: CeleryExecutor, KubernetesExecutor, LocalExecutor\n  executor: \"KubernetesExecutor\"\n  \n  ## Configuration for Airflow\n  config:\n    core:\n      load_examples: \"False\"\n      load_default_connections: \"False\"\n      dagbag_import_timeout: \"120.0\"\n      dag_file_processor_timeout: \"120\"\n    \n    ## Webserver configuration\n    webserver:\n      workers: 4\n      worker_class: sync\n      worker_connections: 8\n      max_requests: 0\n      max_requests_jitter: 0\n      keepalive: 75\n      \n    ## Scheduler configuration\n    scheduler:\n      num_runs: -1\n      processor_poll_interval: 1\n      min_file_process_interval: 30\n      dag_dir_list_interval: 300\n      print_stats_interval: 30\n      \n    ## Celery configuration (if using CeleryExecutor)\n    celery:\n      worker_concurrency: 16\n      worker_log_server_port: 8793\n      \n    ## Logging configuration\n    logging:\n      remote_logging: \"False\"\n      \n    ## Kubernetes configuration (if using KubernetesExecutor)\n    kubernetes:\n      pod_template:\n        image:\n          repository: apache/airflow\n          tag: \"2.10.0-python3.9\"\n  \n  ## Resources settings\n  resources:\n    limits:\n      cpu: 1000m\n      memory: 1Gi\n    requests:\n      cpu: 500m\n      memory: 512Mi\n  \n  ## Webserver settings\n  webserver:\n    replicas: 1\n    service:\n      type: ClusterIP\n      port: 8080\n      nodePort: \"\"\n    resources:\n      limits:\n        cpu: 500m\n        memory: 512Mi\n      requests:\n        cpu: 250m\n        memory: 256Mi\n  \n  ## Scheduler settings\n  scheduler:\n    replicas: 1\n    resources:\n      limits:\n        cpu: 500m\n        memory: 512Mi\n      requests:\n        cpu: 250m\n        memory: 256Mi\n  \n  ## Worker settings (for CeleryExecutor)\n  workers:\n    replicas: 1\n    resources:\n      limits:\n        cpu: 1000m\n        memory: 1Gi\n      requests:\n        cpu: 500m\n        memory: 512Mi\n  \n  ## Triggerer settings\n  triggerer:\n    replicas: 1\n    resources:\n      limits:\n        cpu: 500m\n        memory: 512Mi\n      requests:\n        cpu: 250m\n        memory: 256Mi\n  \n  ## Statsd settings\n  statsd:\n    enabled: true\n    resources:\n      limits:\n        cpu: 100m\n        memory: 128Mi\n      requests:\n        cpu: 50m\n        memory: 64Mi\n  \n  ## Redis settings (for CeleryExecutor)\n  redis:\n    enabled: false\n    resources:\n      limits:\n        cpu: 100m\n        memory: 128Mi\n      requests:\n        cpu: 50m\n        memory: 64Mi\n  \n  ## Flower settings (for CeleryExecutor)\n  flower:\n    enabled: false\n    resources:\n      limits:\n        cpu: 100m\n        memory: 128Mi\n      requests:\n        cpu: 50m\n        memory: 64Mi\n\n## PostgreSQL settings (Airflow metadata database)\npostgresql:\n  enabled: true\n  auth:\n    postgresPassword: \"airflow\"\n    database: \"airflow\"\n  primary:\n    resources:\n      limits:\n        cpu: 500m\n        memory: 512Mi\n      requests:\n        cpu: 250m\n        memory: 256Mi\n    persistence:\n      enabled: true\n      size: 8Gi\n      storageClass: \"\"\n\n## Ingress settings\ningress:\n  enabled: false\n  web:\n    annotations: {}\n    hosts:\n      - host: airflow.local\n        paths:\n          - path: /\n            pathType: Prefix\n    tls: []\n\n## Persistence settings\npersistence:\n  enabled: true\n  size: 10Gi\n  storageClass: \"\"\n\n## Security context\nsecurityContext: {}\n  # runAsUser: 50000\n  # fsGroup: 0\n\n## Service account\nserviceAccount:\n  create: true\n  name: \"\"\n\n## Metrics configuration\nmetrics:\n  enabled: false\n  serviceMonitor:\n    enabled: false\n\n## Extra environment variables\nextraEnv: []\n  # - name: \"AIRFLOW__CORE__LOAD_EXAMPLES\"\n  #   value: \"False\"",
  "url": "https://github.com/apache/airflow/tree/main/chart",
  "createdAt": "2025-10-03"
}